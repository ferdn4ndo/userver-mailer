# ----------------------------------------------------------------------------------------------------------------------
# --------------------- Domain Settings --------------------------------------------------------------------------------
# ----------------------------------------------------------------------------------------------------------------------

VIRTUAL_HOST=
LETSENCRYPT_HOST=
LETSENCRYPT_EMAIL=

HOSTNAME=<subdomain>
DOMAINNAME=<domain>

#
# IMPORTANT: For more information about the varialbles below this line, access:
# https://docker-mailserver.github.io/docker-mailserver/edge/config/environment/
#

# empty => uses the hostname command to get canonical hostname for docker-mailserver to use.
# => Specify a fully-qualified domainname to serve mail for. This is used for many of the config features so if you
# can't set your hostname (eg: you're in a container platform that doesn't let you) specify it via this environment
# variable. It will take priority over docker run options: --hostname and --domainname, or docker-compose.yml config
# equivalents: hostname: and domainname:.
#
# Should be the same as: <subdomain>.<domain>
# Ex: HOSTNAME=mail; DOMAINNAME=example.com -> OVERRIDE_HOSTNAME=mail.example.com
OVERRIDE_HOSTNAME=<full_host>

# empty => postmaster@domain.com
# => Specify the postmaster address
POSTMASTER_ADDRESS=postmaster@domain.com

# Set the timezone. If this variable is unset, the container runtime will try to detect the time using /etc/localtime,
# which you can alternatively mount into the container. The value of this variable must follow the pattern AREA/ZONE,
# i.e. of you want to use Germany's time zone, use Europe/Berlin. You can lookup all available timezones at
# https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List
TZ=America/Sao_Paulo

# ----------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------- General ------------------------------------------------------
# ----------------------------------------------------------------------------------------------------------------------

# 0 => Debug disabled [DEFAULT]
# 1 => Enables debug on startup
DMS_DEBUG=0

# Set the log level for DMS. This is mostly relevant for container startup scripts and change detection event feedback.
# Valid values (in order of increasing verbosity) are: error, warn, info, debug and trace. The default log level is
# info.
LOG_LEVEL=info

# Here you can adjust the log-level for Supervisor. Possible values are
# critical => Only show critical messages
# error => Only show erroneous output
# warn => Show warnings [DEFAULT]
# info => Normal informational output
# debug => Also show debug messages
# The log-level will show everything in its class and above.
SUPERVISOR_LOGLEVEL=warn

# 0 => mail state in default directories [DEFAULT]
# 1 => consolidate all states into a single directory (`/var/mail-state`) to allow persistence using docker volumes
ONE_DIR=1

# Set different options for mynetworks option (can be overwrite in postfix-main.cf)
# **WARNING**: Adding the docker network's gateway to the list of trusted hosts, e.g. using the `network` or
# `connected-networks` option, can create an open relay
# https://github.com/tomav/docker-mailserver/issues/1405#issuecomment-590106498
#
# Possible values:
# none => Explicitly force authentication [DEFAULT]
# container => Container IP address only.
# host => Add docker host (ipv4 only).
# network => Add the docker default bridge network (172.16.0.0/12); WARNING: docker-compose might use others
#            (e.g. 192.168.0.0/16) use PERMIT_DOCKER=connected-networks in this case.
# connected-networks => Add all connected docker networks (ipv4 only).
PERMIT_DOCKER=

# Amavis content filter (used for ClamAV & SpamAssassin)
# 0 => Amavis is disabled
# 1 => Amavis is enabled [DEFAULT]
ENABLE_AMAVIS=1

# For more information on Amavis' logging statistics, access:
# https://lists.amavis.org/pipermail/amavis-users/2011-March/000158.html
# Possible values:
# -1/-2/-3 => Only show errors
# 0 => Show warnings [DFAULT]
# 1/2 => Show default informational output
# 3/4/5 => log debug information (very verbose)
AMAVIS_LOGLEVEL=0

# This enables the zen.spamhaus.org DNS block list in postfix and various lists in postscreen.
# Note: Emails will be rejected, if they don't pass the block list checks!
# 0 => DNS block lists are disabled [DEFAULT]
# 1 => DNS block lists are enabled
ENABLE_DNSBL=0

# 0 => ClamAV is disabled [DEFAULT]
# 1 => ClamAV is enabled
ENABLE_CLAMAV=0

# 1 => Enables POP3 service
# empty => disables POP3
ENABLE_POP3=

# If you enable Fail2Ban, don't forget to add the following lines to your `docker-compose.yml`:
#    cap_add:
#      - NET_ADMIN
# Otherwise, `iptables` won't be able to ban IPs.
ENABLE_FAIL2BAN=0

# drop => drop packet (send NO reply) [DEFAULT]
# reject => reject packet (send ICMP unreachable)
FAIL2BAN_BLOCKTYPE=drop

# empty => all daemons start
# 1 => only launch postfix smtp
SMTP_ONLY=

# Please read [the SSL page in the wiki](https://github.com/tomav/docker-mailserver/wiki/Configure-SSL) for more
# information.
#
# empty => SSL disabled
# letsencrypt => Enables Let's Encrypt certificates
# custom => Enables custom certificates
# manual => Let's you manually specify locations of your SSL certificates for non-standard cases
# self-signed => Enables self-signed certificates
SSL_TYPE=letsencrypt

# empty => modern
# modern => Enables TLSv1.2 and modern ciphers only. (default)
# intermediate => Enables TLSv1, TLSv1.1 and TLSv1.2 and broad compatibility ciphers.
# old => NOT implemented. If you really need it, then customize the TLS ciphers overriding postfix and dovecot settings
#        (https://github.com/tomav/docker-mailserver/wiki/)
TLS_LEVEL=modern

# Configures the handling of creating mails with forged sender addresses.
#
# empty => (not recommended, but default for backwards compatibility reasons)
#           Mail address spoofing allowed. Any logged in user may create email messages with a forged sender address.
#           See also https://en.wikipedia.org/wiki/Email_spoofing
# 1 => (recommended) Mail spoofing denied. Each user may only send with his own or his alias addresses.
#       Addresses with extension delimiters(http://www.postfix.org/postconf.5.html#recipient_delimiter) are not able to
# send messages.
SPOOF_PROTECTION=1

# Enables the Sender Rewriting Scheme. SRS is needed if your mail server acts as forwarder. See the link for more info:
# https://github.com/roehling/postsrsd/blob/master/README.md#sender-rewriting-scheme-crash-course
#  - **0** => Disabled
#  - 1 => Enabled
ENABLE_SRS=0

# In case your network interface differs from eth0, e.g. when you are using HostNetworking in Kubernetes, you can set
# this to whatever interface you want. This interface will then be used.
# empty => eth0
NETWORK_INTERFACE=

# Set how many days a virusmail will stay on the server before being deleted
# empty => 7 days
VIRUSMAILS_DELETE_DELAY=30

# This Option is activating the Usage of POSTFIX_DAGENT to specify a lmtp client different from default dovecot socket.
# empty => disabled
# 1 => enabled
ENABLE_POSTFIX_VIRTUAL_TRANSPORT=

# Enabled by ENABLE_POSTFIX_VIRTUAL_TRANSPORT. Specify the final delivery of postfix
#
# empty => fail
# `lmtp:unix:private/dovecot-lmtp` (use socket)
# `lmtps:inet:<host>:<port>` (secure lmtp with starttls, take a look at
#                             https://sys4.de/en/blog/2014/11/17/sicheres-lmtp-mit-starttls-in-dovecot/)
# `lmtp:<kopano-host>:2003` (use kopano as mailstore)
# etc.
POSTFIX_DAGENT=

# Set the mailbox size limit for all users. If set to zero, the size will be unlimited (default).
#
# empty => 0
POSTFIX_MAILBOX_SIZE_LIMIT=

# imap-quota is enabled and allow clients to query their mailbox usage.
# When the mailbox is deleted, the quota directive is deleted as well.
# Dovecot quotas support LDAP, but it's not implemented (PRs are welcome!).
# https://docker-mailserver.github.io/docker-mailserver/edge/config/user-management/accounts/#notes
#
# 1 => Dovecot quota is enabled
# 0 => Dovecot quota is disabled
ENABLE_QUOTAS=1

# Set the message size limit for all users. If set to zero, the size will be unlimited (not recommended!)
#
# empty => 10240000 (~10 MB)
#
# 1024 * 1024 * 50 (50 MB) = 52428800 bytes
POSTFIX_MESSAGE_SIZE_LIMIT=52428800

# Mails larger than this limit won't be scanned. ClamAV must be enabled (ENABLE_CLAMAV=1) for this.
# empty => 25M (25 MB)
CLAMAV_MESSAGE_SIZE_LIMIT=50M

# 1 => Enables Managesieve on port 4190
# empty => disables Managesieve
ENABLE_MANAGESIEVE=

# Check for updates on container start and then once a day. If an update is available, a mail is send to
# POSTMASTER_ADDRESS.
# 0 => Update check disabled
# 1 => Update check enabled
ENABLE_UPDATE_CHECK=1

# Customize the update check interval. Number + Suffix. Suffix must be 's' for seconds, 'm' for minutes, 'h' for hours
# or 'd' for days.
# 1d => Check for updates once a day
UPDATE_CHECK_INTERVAL=1d

# enforce => Allow other tests to complete. Reject attempts to deliver mail with a 550 SMTP reply, and log the
#            helo/sender/recipient information. Repeat this test the next time the client connects.
# drop => Drop the connection immediately with a 521 SMTP reply. Repeat this test the next time the client connects.
# ignore => Ignore the failure of this test. Allow other tests to complete. Repeat this test the next time the client
#           connects. This option is useful for testing and collecting statistics without blocking mail.
POSTSCREEN_ACTION=enforce

# maildir => uses very common Maildir format, one file contains one message
# sdbox => (experimental) uses Dovecot high-performance mailbox format, one file contains one message
# mdbox => (experimental) uses Dovecot high-performance mailbox format, multiple messages per file and multiple files
#          per box
# This option has been added in November 2019. Using other format than Maildir is considered as experimental in
# docker-mailserver and should only be used for testing purpose. For more details, please refer to Dovecot
# Documentation.
DOVECOT_MAILBOX_FORMAT=maildir

# Choose TCP/IP protocols to use
# **all** => All possible protocols.
# ipv4 => Use only IPv4 traffic. Most likely you want this behind Docker.
# ipv6 => Use only IPv6 traffic.
#
# Note: More details in http://www.postfix.org/postconf.5.html#inet_protocols
POSTFIX_INET_PROTOCOLS=all

# ----------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------- Reports ------------------------------------------------------
# ----------------------------------------------------------------------------------------------------------------------

# Enables regular pflogsumm mail reports.
# This is a new option. The old REPORT options are still supported for backwards compatibility. If this is not set and
# reports are enabled with the old options, logrotate will be used.
#
# not set => No report
# daily_cron => Daily report for the previous day
# logrotate => Full report based on the mail log when it is rotated
PFLOGSUMM_TRIGGER=daily_cron

# Recipient address for pflogsumm reports.
#
# not set => Use POSTMASTER_ADDRESS
# => Specify the recipient address(es)
PFLOGSUMM_RECIPIENT=

# From address for pflogsumm reports.
#
# not set => Use REPORT_SENDER
# => Specify the sender address
PFLOGSUMM_SENDER=

# Interval for logwatch report.
#
# none => No report is generated
# daily => Send a daily report
# weekly => Send a report every week
LOGWATCH_INTERVAL=weekly

# Recipient address for logwatch reports if they are enabled.
#
# not set => Use REPORT_RECIPIENT or POSTMASTER_ADDRESS
# => Specify the recipient address(es)
LOGWATCH_RECIPIENT=

# Sender address (FROM) for logwatch reports if logwatch reports are enabled.
#
# not set => Use REPORT_SENDER
# => Specify the sender address
LOGWATCH_SENDER=

# Defines who receives reports (if they are enabled).
#
# empty => Use POSTMASTER_ADDRESS
# => Specify the recipient address
REPORT_RECIPIENT=

# Defines who sends reports (if they are enabled).
#
# empty => mailserver-report@<YOUR DOMAIN>
# => Specify the sender address
REPORT_SENDER=

# Changes the interval in which log files are rotated.
#
# weekly => Rotate log files weekly
# daily => Rotate log files daily
# monthly => Rotate log files monthly
LOGROTATE_INTERVAL=weekly

# ----------------------------------------------------------------------------------------------------------------------
# ---------------------------------------------------- SpamAssassin ----------------------------------------------------
# ----------------------------------------------------------------------------------------------------------------------

# 0 => SpamAssassin is disabled
# 1 => SpamAssassin is enabled
ENABLE_SPAMASSASSIN=0

# 0 => Spam messages will be bounced (rejected) without any notification (dangerous).
# 1 => Spam messages will be delivered to the inbox and tagged as spam using SA_SPAM_SUBJECT.
SPAMASSASSIN_SPAM_TO_INBOX=1

# KAM is a 3rd party SpamAssassin ruleset, provided by the McGrail Foundation. If SpamAssassin is enabled, KAM can be used in
# addition to the default ruleset.
#
# 0 => KAM disabled
# 1 => KAM enabled
ENABLE_SPAMASSASSIN_KAM=0

# Spam messages can be moved in the Junk folder. Note: this setting needs SPAMASSASSIN_SPAM_TO_INBOX=1
#
# 0 => Spam messages will be delivered in the mailbox.
# 1 => Spam messages will be delivered in the Junk folder.
MOVE_SPAM_TO_JUNK=1

# Note: this SpamAssassin setting needs ENABLE_SPAMASSASSIN=1
# 2.0 => add spam info headers if at, or above that level
SA_TAG=2.0

# Note: this SpamAssassin setting needs ENABLE_SPAMASSASSIN=1
# 6.31 => add 'spam detected' headers at that level
SA_TAG2=6.31

# This SpamAssassin setting needs ENABLE_SPAMASSASSIN=1
# By default, docker-mailserver is configured to quarantine spam emails.
#
# If emails are quarantined, they are compressed and stored in a location dependent on the ONE_DIR setting above. To
#  inhibit this behaviour and deliver spam emails, set this to a very high value e.g. 100.0.
#
# If ONE_DIR=1 (default) the location is /var/mail-state/lib-amavis/virusmails/, or if ONE_DIR=0:
# /var/lib/amavis/virusmails/. These paths are inside the docker container.
#
# 6.31 => triggers spam evasive actions
SA_KILL=6.31

# ***SPAM*** => add tag to subject if spam detected
# Note: this SpamAssassin setting needs ENABLE_SPAMASSASSIN=1. Add the SpamAssassin score to the subject line by
# inserting the keyword _SCORE_: ***SPAM(_SCORE_)***.
SA_SPAM_SUBJECT=***SPAM***

# This will uncomment the respective line in /etc/spamassasin/local.cf
# Note: activate this only if you are confident in your bayes database for identifying spam.
#
# 1 => will activate SpamAssassin short circuiting for bayes spam detection.
SA_SHORTCIRCUIT_BAYES_SPAM=

# This will uncomment the respective line in /etc/spamassasin/local.cf
# Note: activate this only if you are confident in your bayes database for identifying ham.
#
# 1 => will activate SpamAssassin short circuiting for bayes ham detection
SA_SHORTCIRCUIT_BAYES_HAM=

# ----------------------------------------------------------------------------------------------------------------------
# ----------------------------------------------------- Fetchmail ------------------------------------------------------
# ----------------------------------------------------------------------------------------------------------------------

# 0 => fetchmail disabled
# 1 => fetchmail enabled
ENABLE_FETCHMAIL=0

# 300 => fetchmail The number of seconds for the interval
FETCHMAIL_POLL=300

# Note: The defaults of your fetchmailrc file need to be at the top of the file. Otherwise it won't be added correctly
# to all separate fetchmail instances.
#
# 0 => fetchmail runs with a single config file /etc/fetchmailrc
# 1 => /etc/fetchmailrc is split per poll entry. For every poll entry a separate fetchmail instance is started to allow
#      having multiple imap idle configurations defined.
FETCHMAIL_PARALLEL=0

# ----------------------------------------------------------------------------------------------------------------------
# -------------------------------------------------------- LDAP --------------------------------------------------------
# ----------------------------------------------------------------------------------------------------------------------

# A second container for the ldap service is necessary (i.e. https://github.com/osixia/docker-openldap)
# For preparing the ldap server to use in combination with this container this article may be helpful:
# http://acidx.net/wordpress/2014/06/installing-a-mailserver-with-postfix-dovecot-sasl-ldap-roundcube/

# empty => LDAP authentification is disabled
# 1 => LDAP authentification is enabled
ENABLE_LDAP=

# empty => no
# yes => LDAP over TLS enabled for Postfix
LDAP_START_TLS=

# NOTE: If you going to use docker-mailserver in combination with docker-compose.yml you can set the service name here
#
# empty => mail.example.com
# => Specify the dns-name/ip-address where the ldap-server is listening, or an URI like ldaps://mail.example.com
LDAP_SERVER_HOST=

# empty => ou=people,dc=domain,dc=com
# => e.g. LDAP_SEARCH_BASE=dc=mydomain,dc=local
LDAP_SEARCH_BASE=

# empty => cn=admin,dc=domain,dc=com
# => take a look at examples of SASL_LDAP_BIND_DN
LDAP_BIND_DN=

# empty => admin
# => Specify the password to bind against ldap
LDAP_BIND_PW=

# e.g. (&(mail=%s)(mailEnabled=TRUE))
# => Specify how ldap should be asked for users
LDAP_QUERY_FILTER_USER=

# e.g. (&(mailGroupMember=%s)(mailEnabled=TRUE))
# => Specify how ldap should be asked for groups
LDAP_QUERY_FILTER_GROUP=

# e.g. (&(mailAlias=%s)(mailEnabled=TRUE))
# => Specify how ldap should be asked for aliases
LDAP_QUERY_FILTER_ALIAS=

# e.g. (&(|(mail=*@%s)(mailalias=*@%s)(mailGroupMember=*@%s))(mailEnabled=TRUE))
# => Specify how ldap should be asked for domains
LDAP_QUERY_FILTER_DOMAIN

# empty => use user/alias/group maps directly, equivalent to (|($LDAP_QUERY_FILTER_USER)($LDAP_QUERY_FILTER_ALIAS)($LDAP_QUERY_FILTER_GROUP))
# => Override how ldap should be asked if a sender address is allowed for a user
LDAP_QUERY_FILTER_SENDERS

# ----------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------ Dovecot -------------------------------------------------------
# ----------------------------------------------------------------------------------------------------------------------

# empty => no
# yes => LDAP over TLS enabled for Dovecot
DOVECOT_TLS=

# empty => same as LDAP_SEARCH_BASE
# => Tell Dovecot to search only below this base entry. (e.g. ou=people,dc=domain,dc=com)
DOVECOT_BASE=

# empty => SSHA
# => Select one crypt scheme for password hashing from this list of password schemes.
DOVECOT_DEFAULT_PASS_SCHEME=

DOVECOT_DN=
# empty => same as LDAP_BIND_DN
# => Bind dn for LDAP connection. (e.g. cn=admin,dc=domain,dc=com)

# empty => same as LDAP_BIND_PW
# => Password for LDAP dn sepecifified in DOVECOT_DN.
DOVECOT_DNPASS=

# Note: If the protocol is missing, ldap:// will be used.
# Note: This deprecates DOVECOT_HOSTS (as it didn't allow to use LDAPS), which is currently still supported for backwards compatibility.
#
# empty => same as LDAP_SERVER_HOST
# => Specify a space separated list of LDAP uris.
DOVECOT_URIS=

# empty => 3
# 2 => LDAP version 2 is used
# 3 => LDAP version 3 is used
DOVECOT_LDAP_VERSION=

# empty => no
# yes => Enable LDAP authentication binds
DOVECOT_AUTH_BIND=

# e.g. (&(objectClass=PostfixBookMailAccount)(uniqueIdentifier=%n))
DOVECOT_USER_FILTER=

# Note: This is necessary for directories that do not use the Postfix Book Schema.
# Note: The left-hand value is the directory attribute, the right hand value is the dovecot variable.
# More details on the Dovecot Wiki: https://wiki.dovecot.org/AuthDatabase/LDAP/Userdb
#
# e.g. homeDirectory=home,qmailUID=uid,qmailGID=gid,mailMessageStore=mail
# => Specify the directory to dovecot attribute mapping that fits your directory structure.
DOVECOT_USER_ATTRS=

# e.g. (&(objectClass=PostfixBookMailAccount)(uniqueIdentifier=%n))
# empty => same as DOVECOT_USER_FILTER
DOVECOT_PASS_FILTER=

# Note: This is necessary for directories that do not use the Postfix Book Schema.
# Note: The left-hand value is the directory attribute, the right hand value is the dovecot variable.
# More details on the Dovecot Wiki: https://wiki.dovecot.org/AuthDatabase/LDAP/Userdb
#
# e.g. uid=user,userPassword=password
# => Specify the directory to dovecot variable mapping that fits your directory structure.
DOVECOT_PASS_ATTRS=

# ----------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------ Postgrey ------------------------------------------------------
# ----------------------------------------------------------------------------------------------------------------------

# 0 => postgrey is disabled
# 1 => postgrey is enabled
ENABLE_POSTGREY=0

# Note: This postgrey setting needs ENABLE_POSTGREY=1
# 300 => greylist for N seconds
POSTGREY_DELAY=300

# Note: This postgrey setting needs ENABLE_POSTGREY=1
# 35 => delete entries older than N days since the last time that they have been seen
POSTGREY_MAX_AGE=35

# Note: This postgrey setting needs ENABLE_POSTGREY=1
# 5 => whitelist host after N successful deliveries (N=0 to disable whitelisting)
POSTGREY_AUTO_WHITELIST_CLIENTS=5

# Delayed by Postgrey => response when a mail is greylisted
# Note: This postgrey setting needs ENABLE_POSTGREY=1
POSTGREY_TEXT=Delayed by Postgrey

# ----------------------------------------------------------------------------------------------------------------------
# -------------------------------------------------------- SASL --------------------------------------------------------
# ----------------------------------------------------------------------------------------------------------------------

# 0 => saslauthd is disabled
# 1 => saslauthd is enabled
ENABLE_SASLAUTHD=

# NOTE: can be a list of mechanisms like pam ldap shadow
# empty => pam
# ldap => authenticate against ldap server
# shadow => authenticate against local user db
# mysql => authenticate against mysql db
# rimap => authenticate against imap server
SASLAUTHD_MECHANISMS=

# empty => None
# e.g. with SASLAUTHD_MECHANISMS rimap you need to specify the ip-address/servername of the imap server ==> xxx.xxx.xxx.xxx
SASLAUTHD_MECH_OPTIONS=

# empty => same as LDAP_SERVER_HOST
# Note: since version 10.0.0, you can specify a protocol here (like ldaps://); this deprecates SASLAUTHD_LDAP_SSL.
SASLAUTHD_LDAP_SERVER=

# empty => no
# yes => Enable ldap_start_tls option
SASLAUTHD_LDAP_START_TLS=

# empty => no
# yes => Enable ldap_tls_check_peer option
SASLAUTHD_LDAP_TLS_CHECK_PEER=

# Path to directory with CA (Certificate Authority) certificates.
#
# empty => Nothing is added to the configuration
# Any value => Fills the ldap_tls_cacert_dir option
SASLAUTHD_LDAP_TLS_CACERT_DIR=

# File containing CA (Certificate Authority) certificate(s).
#
# empty => Nothing is added to the configuration
# Any value => Fills the ldap_tls_cacert_file option
SASLAUTHD_LDAP_TLS_CACERT_FILE=

# empty => same as LDAP_BIND_DN
# specify an object with privileges to search the directory tree
# e.g. active directory: SASLAUTHD_LDAP_BIND_DN=cn=Administrator,cn=Users,dc=mydomain,dc=net
# e.g. openldap: SASLAUTHD_LDAP_BIND_DN=cn=admin,dc=mydomain,dc=net
SASLAUTHD_LDAP_BIND_DN=

# empty => same as LDAP_BIND_PW
SASLAUTHD_LDAP_PASSWORD=

# empty => same as LDAP_SEARCH_BASE
# specify the search base
SASLAUTHD_LDAP_SEARCH_BASE=

# empty => default filter (&(uniqueIdentifier=%u)(mailEnabled=TRUE))
# e.g. for active directory: (&(sAMAccountName=%U)(objectClass=person))
# e.g. for openldap: (&(uid=%U)(objectClass=person))
SASLAUTHD_LDAP_FILTER=

# Specify what password attribute to use for password verification.
#
# empty => Nothing is added to the configuration but the documentation says it is userPassword by default.
# Any value => Fills the ldap_password_attr option
SASLAUTHD_LDAP_PASSWORD_ATTR=

# empty => No sasl_passwd will be created
# string => /etc/postfix/sasl_passwd will be created with the string as password
SASL_PASSWD=

# empty => bind will be used as a default value
# fastbind => The fastbind method is used
# custom => The custom method uses userPassword attribute to verify the password
SASLAUTHD_LDAP_AUTH_METHOD=

# Specify the authentication mechanism for SASL bind.
#
# empty => Nothing is added to the configuration
# Any value => Fills the ldap_mech option
SASLAUTHD_LDAP_MECH=

# ----------------------------------------------------------------------------------------------------------------------
# ------------------------------------------- SRS (Sender Rewriting Scheme) --------------------------------------------
# ----------------------------------------------------------------------------------------------------------------------

# An email has an "envelope" sender (indicating the sending server) and a "header" sender (indicating who sent it). More
# strict SPF policies may require you to replace both instead of just the envelope sender.
# More info available at https://www.mybluelinux.com/what-is-email-envelope-and-email-header/
#
# envelope_sender => Rewrite only envelope sender address
# header_sender => Rewrite only header sender (not recommended)
# envelope_sender,header_sender => Rewrite both senders
SRS_SENDER_CLASSES=envelope_sender,header_sender

# empty => Envelope sender will be rewritten for all domains
# provide comma separated list of domains to exclude from rewriting
SRS_EXCLUDE_DOMAINS=

# empty => generated when the container is started for the first time
# => provide a secret to use in base64
# you may specify multiple keys, comma separated. the first one is used for signing and the remaining will be used for
# verification. this is how you rotate and expire keys
# if you have a cluster/swarm make sure the same keys are on all nodes
# example command to generate a key: dd if=/dev/urandom bs=24 count=1 2>/dev/null | base64
SRS_SECRET=

# empty => Derived from OVERRIDE_HOSTNAME, $DOMAINNAME (internal), or the container's hostname
# Set this if auto-detection fails, isn't what you want, or you wish to have a separate container handle DSNs
SRS_DOMAINNAME=

# ----------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------- Default Relay Host -------------------------------------------------
# ----------------------------------------------------------------------------------------------------------------------

# Setup relaying all mail through a default relay host
#
# empty => don't set default relayhost setting in main.cf
# => default host and port to relay all mail through. Format: [example.com]:587 (don't forget the brackets if you need
# this to be compatible with $RELAY_USER and $RELAY_PASSWORD, explained below).
DEFAULT_RELAY_HOST=

# ----------------------------------------------------------------------------------------------------------------------
# ---------------------------------------------- Multi-domain Relay Hosts ----------------------------------------------
# ----------------------------------------------------------------------------------------------------------------------

# Setup relaying for multiple domains based on the domain name of the sender
# optionally uses usernames and passwords in postfix-sasl-password.cf and relay host mappings in postfix-relaymap.cf

# empty => don't configure relay host
# default host to relay mail through
RELAY_HOST=

# empty => 25
# default port to relay mail through
RELAY_PORT=

# empty => no default
# default relay username (if no specific entry exists in postfix-sasl-password.cf)
RELAY_USER=

# empty => no default
# password for default relay user
RELAY_PASSWORD=
